import random
import wikipedia
wikipedia.set_lang('ru')

sport = 'мяч, арбитр, чемпион, альпинизм, кубок, игра, плавание, лыжи, кеды, шест, атлет, эстафета, гонка, ' \
        'аут, бег, сани, судья, самбо, шашки, олимпиада, фитнес, футбол, тренажер, корзина, гимнаст, штанга, ' \
        'баскетбол, боксер, борьба, дзюдо, блок, гиря, теннис, чешки, гребля, турнир, хоккей, клюшка, ролики, ' \
        'шайба, лига, кегли, корт, турник, гандбол, эспандер, бутсы, весло, каноэ, гантель, стрельба, родео, ' \
        'раунд, реванш, ракетка, кросс, мишень, финал, скейтборд, чемпионат, серфинг, волейбол, бассейн, матч, ' \
        'команда, рекорд, фигурист, гимнастика, биатлон, победа, финиш, бадминтон, марафон, тренировка, батут, ' \
        'бокс, каратэ, бильярд, сноуборд, дартс, гольф, футбол, крикет, бейсбол, регби, боулинг, усилие, снаряд, ' \
        'тренер, допинг, вратарь, акробат, бита'

insects = 'палочник, термит, сороконожка, саранча, листоед, тля, опарыш, таракан, мотыль, наездник, комар, ' \
          'листовертка, шмель, моль, светляк, долгоножка, муравей, скорпион, богомол, сверчок, оса, пчела, ' \
          'муха, плавунец, кокон, кузнечик, медведка, овод, вошь, личинка, водомерка, блоха, тихоходка, клоп, ' \
          'сенокосец, слепень, жужелица, древоточец, жук, тарантул, мошка, проволочник, уховертка, клещ,' \
          ' белянка, чернотелка, каракурт, бархатница, долгоносик, златоглазка, шелкопряд, короед, паук, ' \
          'скарабей, шершень, плодожорка, москит, хрущак, бабочка, стрекоза'

birds = 'качурка, кряква, жаворонок, скворец, соловей, зяблик, журавль, дятел, дупель, пастушок, кедровка, свиристель,' \
        ' песчанка, голубь, курганник, могильник, колпица, пестрогрудка, сова, погоныш, филин, трясогузка, синехвостка,' \
        ' глухарь, гусь, совка, чиж, щеголь, пигалица, страус, рябчик, пеликан, чеглок, кукша, сипуха, турпан, пустельга, ' \
        'мухоловка, фламинго, баклан, гагара, пыжик, снегирь, каменушка, ястреб, кукушка, грач, аист, орлан, перепел,' \
        ' деряба, сорокопут, синица, выпь, чайка, цапля, дубровник, коршун, беркут, чечетка, пеночка, дубонос, синьга,' \
        ' гагарка, мандаринка, сапсан, крохаль, славка, стервятник, овсянка, орел, щегол, сорока, сойка, тетерев, лебедь,' \
        ' пересмешка, утка, воробей, сыч, ворона, бекас, вертишейка, стриж, куропатка, буревестник, иволга, ласточка, ' \
        'вьюрок, дрозд, горлица, горихвостка, галка, коростель, чибис, зарянка, камышовка, зеленушка, фазан'

winter = 'каток, снег, декабрь, свитер, прорубь, гололед, февраль, шины, сосулька, валенки, метель, мороз, тройка, ' \
         'январь, горка, стужа, пурга, шуба, узоры, санки, рождество, сугроб, вьюга, снегопад, варежки, шапка,' \
         ' ушанка, лыжи, перчатки, новыйгод, лед, карнавал, ночь, зима, игрушка, олень, фейерверк, подарки, конфетти,' \
         ' открытка, хвоя, ель, веселье, волшебство, конфета, календарь, желание, шишка, оливье, куранты, снежинка, шар,' \
         ' серпантин, дождик, чудеса, праздник, петарда, каникулы, мандарины, хоровод, елка, звезда, салат, гирлянда,' \
         ' шампанское, мишура, полночь, хлопушка, сюрприз'

instruments = 'шуруп, кирпич, клещи, изолента, бетон, компрессор,  ножницы, карандаш, пассатижи, станок, раствор, винт, ' \
              'тиски, сверло, паяльник, горелка, рулетка, краска, перчатки, провод, резец, лупа, нож, сварка, кирка, ' \
              'скрепка, шпатель, лом, отвертка, скребок, напильник, уровень, стремянка, болт, проволока, гвоздодер, ' \
              'вилы, молоток, дрель, линейка, гайка, ножовка, шило, дырокол, топор, пила, полотно, кисть, песок, мойка,' \
              ' лопата, домкрат'

feelings = 'дружба, благодарность, искренность, ирония, гордость, недовольство, чувствительность, страх, разочарование,' \
           ' злоба, возбуждение, ненависть, досада, месть, ясность, горе, инстинкт, недоверие, самолюбие, доброта, ' \
           'робость, одиночество, умиление, боль, жалость, беспокойство, патриотизм, настроение, равнодушие, интуиция,' \
           ' сострадание, восприятие, скука, боязнь, мимика, преданность, негодование, гнев, созерцание, обида, состояние,' \
           ' удовольствие, вина, тоска, плач, тревога, впечатление, чутье, самочувствие, откровение, нежность, ' \
           'безразличие, вкус, ужас, переживание, любовь, голод, обоняние, милость, верность, наслаждение, грусть, ' \
           'тщеславие, предчувствие, смущение, совесть, радость, злость, огорчение, агрессия, уверенность, вялость, ' \
           'вера, сочувствие, удивление, экстаз, страсть, вдохновение, смятение, ощущение, неприязнь, брезгливость, ' \
           'скукота, привязанность, смех, восхищение, удовлетворение, зависть, счастье, надежда, стыд, юмор, сомнение, '\
           'волнение, цинизм, сожаление, печаль, сердце, испуг, презрение, задор, симпатия, ревность, осязание, раскаяние, '\
           'душа, восторг, потрясение, ярость, растерянность'

art = 'шитье, литература, скульптура, стих, орнамент, этюд, макраме, натюрморт, граффити, приложение, мозаика, ' \
      'архитектура, цирк, каллиграфия, абстракция, шедевр, танец, муза, концерт, модерн, мюзикл, ваяние, талант, ' \
      'реализм, выступление, мим, жанр, сатира, профессионал, артист, классик, эстетика, спектакль, театр, поэма, ' \
      'мысль, фантастика, идея, хореография, вышивка, кино, шрифт, артистизм, краски, футуризм, анимация, диалектика, ' \
      'глиптика, картина, дизайн, экспозиция, декаданс, иллюзионизм, логика, клоунада, наука, бонсай, пение, коллаж, ' \
      'оригами, мольберт, вокал, арт, богема, мэтр, песня, опера, гравюра, балет, графика, лира, грим, джаз, жонглерство, ' \
      'творчество, шоу, живопись, музыка, кисть'

medicine = 'вирус, грипп, ампула, таблетка, компресс, палата, рецепт, прием, медпункт, анальгин, капельница, абсцесс, ' \
           'болезнь, пластырь, пенициллин, врач, лечение, койка, спринцовка, диагноз, антибиотик, жгут, пациент, ' \
           'носилки, бахилы, шприц, рана, рентген, здоровье, аптека, зеленка, доктор, гиппократ, терапия, поликлиника, ' \
           'осмотр, флюорография, дренаж, лекарство, давление, бинт, вата, колба, лекарь, процедура, укол, капсула, узи, ' \
           'зонд, йод, шов, инъекция, операция, спирт, катетер, полис, вакцина, помощь, пункция, госпиталь, клиника, ' \
           'анализ, симптом, аптечка, марля, карточка, скальпель, пробирка, халат, санитар, снимок, томография, ' \
           'профилактика, больница, кабинет, наркоз'

transport = 'газ, бак, тосол, кузов, двигатель, лодка, яхта, автобус, мопед, лифт, штраф, катер, билет, крыло, ротор, ' \
            'шасси, телега, шлагбаум, рельсы, пассажир, водитель, бензин, велосипед, мотоцикл, аэропорт, луноход, руль, ' \
            'магистраль, вертолет, паровоз, поезд, пробег, самосвал, кондуктор, диспетчер, метро, паром, остановка, ' \
            'дилижанс, грузовик, троллейбус, самокат, повозка, маршрутка, трактор, штурвал, такси, бампер, пароход, ' \
            'стартер, самолет, трамвай, рейс, воз, цилиндр, корабль, карбюратор, педаль, мотор, гайка, вагон, пробег,' \
            'карета, машина, бричка, вокзал, тормоз, привод, болт, винт, рычаг, ракета'

plants = 'тополь, клен, базилик, виола, тимьян, гиацинт, калла, арабис, цикорий, георгин, бегония, секвойя, вербена, ' \
         'кувшинка, петуния, камелия, ноготки, гербера, гвоздика, гардения, нарцисс, орхидея, физалис, кипарис, ' \
         'одуванчик, незабудка, настурция, бук, подсолнух, подснежник, зверобой, липа, хризантема, синеглазка, магнолия, ' \
         'гладиолус, бузина, туя, лен, ромашка, лилия, камыш, фикус, верба, алоэ, роза, плющ, кедр, дуб, вяз, мальва, ' \
         'василек, маргаритка, колокольчик, можжевельник, пальма, шалфей, кактус, шиповник, сирень, лотос, жасмин, ель, ' \
         'мята, пион, ирис, лютик, астра, акация, береза, фрезия, ландыш, ива, мак, фуксия, белена, шафран, имбирь, ' \
         'бамбук, нимфея, тюльпан, хмель, герань, лаванда, крапива, папоротник, граб, орех, тмин, сосна, фиалка, мимоза, ' \
         'полынь, черемуха'

plants_list = plants.split(',')
sport_list = sport.split(',')
insects_list = insects.split(',')
birds_list = birds.split(',')
winter_list = winter.split(',')
instruments_list = instruments.split(',')
feelings_list = feelings.split(',')
art_list = art.split(',')
medicine_list = medicine.split(',')
transport_list = transport.split(',')

# def wikipedia_serch():
#     if tries <= 4:
#         print('Желаете получить подсказку?')
#     answer = input().lower()
#     if answer == 'да':
#         return print(wikipedia.summary(word, sentences=2))
#     else:
#         return None

def get_word():
    print('Выбери категорию из списка: спорт, насекомые, птицы, зима, инструменты, чувства, искусство, '
          'медицина, транспорт, растения. И введи ответ строчными буквами')
    category = input().lower()
    result = {
        'спорт': random.choice(sport_list),
        'насекомые': random.choice(insects_list),
        'птицы': random.choice(birds_list),
        'зима': random.choice(winter_list),
        'инструменты': random.choice(instruments_list),
        'чувства': random.choice(feelings_list),
        'искусство': random.choice(art_list),
        'медицина': random.choice(medicine_list),
        'транспорт': random.choice(transport_list),
        'растения': random.choice(plants_list),
    }
    return result.get(category).upper().strip()

def question():
    print('Желаете сыграть еще раз?', 'Ответьте "Да" или "Нет".')
    answer = input().lower()
    if answer == 'да':
        return True

def display_hangman(tries):
    stages = [  # финальное состояние: голова, торс, обе руки, обе ноги
                '''
                   --------
                   |      |
                   |      O
                   |     \\|/
                   |      |
                   |     / \\
                   -
                ''',
                # голова, торс, обе руки, одна нога
                '''
                   --------
                   |      |
                   |      O
                   |     \\|/
                   |      |
                   |     / 
                   -
                ''',
                # голова, торс, обе руки
                '''
                   --------
                   |      |
                   |      O
                   |     \\|/
                   |      |
                   |      
                   -
                ''',
                # голова, торс и одна рука
                '''
                   --------
                   |      |
                   |      O
                   |     \\|
                   |      |
                   |     
                   -
                ''',
                # голова и торс
                '''
                   --------
                   |      |
                   |      O
                   |      |
                   |      |
                   |     
                   -
                ''',
                # голова
                '''
                   --------
                   |      |
                   |      O
                   |    
                   |      
                   |     
                   -
                ''',
                # начальное состояние
                '''
                   --------
                   |      |
                   |      
                   |    
                   |      
                   |     
                   -
                '''
    ]
    return stages[tries]

def play():
        global word
        global tries
        word = get_word()
        print(word)
        print(len(word))
        word_completion = '_' * len(word)
        guessed = False
        guessed_letters = []
        guessed_words = []
        tries = 6
        counter = 0
        symbol = '!@#$%^&*()-=+/\\.?,'
        print('Слово состоит из', len(word), 'букв.')

        print(display_hangman(tries))

        while guessed == False:
            while counter != len(word):
                print('Введите букву или слово!')
                letter = input().upper()
                if letter in guessed_letters or letter in guessed_words or letter in symbol or letter.isdigit():
                    print('Введите другую букву.')
                if letter in word and len(letter) == 1:
                    guessed_letters.append(letter)

                    for i in range(len(word)):
                        if word[i] == letter:
                            counter += 1
                            word_completion = word_completion[:i] + letter + word_completion[i+1:]
                elif letter not in word and len(letter) == 1:
                    guessed_letters.append(letter)
                    tries -= 1
                    print('Ты ошибся. Попробуй еще раз.')
                    print(display_hangman(tries))
                    if tries <= 4:
                        print('Желаете получить подсказку?')
                        answer = input().lower()
                        if answer == 'да':
                            print(wikipedia.summary(word, sentences=3))
                        else:
                            break

                elif letter == word and len(letter) == len(word):
                    guessed != False
                    return print('Поздравляю, ты прошел игру!')

                elif letter != word or (len(letter) != len(word)):
                    tries -= 1
                    print('Ты ошибся. Попробуй еще раз.')
                    print(display_hangman(tries))
                    if tries <= 4:
                        print('Желаете получить подсказку?')
                        answer = input().lower()
                        if answer == 'да':
                            print(wikipedia.summary(word, sentences=3))
                        else:
                            break

                print(word_completion)
                if tries == 0:

                    return (print('Ты проиграл.', 'Загаданное слово - ', word), display_hangman(tries))
                else:
                    continue

            return print('Поздравляю, ты прошел игру!')

print('Привет. Давай сыграем в игру')
play()
while question() is True:
    play()
else:
    print('Мы еще встретимся...')

